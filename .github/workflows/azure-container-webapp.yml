# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-custom-container?tabs=dotnet&pivots=container-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 4. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 5. Change the value for the AZURE_WEBAPP_NAME.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: ethicsdash-cicd-app  # set this to the name of your Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set Azure Cloud
        run: az cloud set -n AzureCloud

      - name: Login to Azure via OIDC
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          environment: 'AzureCloud'

      - name: Debug Azure login context
        run: az account show --output table

      - name: Log in to Azure Container Registry (via Azure CLI)
        run: az acr login --name ethicsdashacr

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to ACR
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ethicsdashacr.azurecr.io/ethicsdash-app:${{ github.sha }}

  deploy:
    permissions:
      id-token: write
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Login to Azure via OIDC
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          environment: 'AzureCloud'

      - name: Debug Azure login context
        run: az account show --output table

      - name: Set Azure Cloud
        run: az cloud set -n AzureCloud

      - name: Log in to ACR
        run: az acr login --name ethicsdashacr

      - name: Configure multi-container WebApp
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az group create \
              --name ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --location eastus
            az appservice plan create \
              --name ethicsdash-plan \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --is-linux \
              --sku B1
            az webapp create \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --plan ethicsdash-plan \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --multicontainer-config-type compose \
              --multicontainer-config-file docker-compose.yml
