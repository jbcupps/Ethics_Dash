name: Azure Container Registry Build and Deploy

on:
  # push:
  #  branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # ACR Configuration
  ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  IMAGE_NAME: ethics-dash
  IMAGE_TAG: ${{ github.sha }}

  # API Configuration
  API_KEY: ${{ secrets.API_KEY }}
  API_SECRET: ${{ secrets.API_SECRET }}
  API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
  API_VERSION: ${{ secrets.API_VERSION }}
  
  # Environment Configuration
  NODE_ENV: ${{ secrets.NODE_ENV }}
  LOG_LEVEL: ${{ secrets.LOG_LEVEL }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ secrets.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ secrets.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            API_KEY=${{ secrets.API_KEY }}
            API_SECRET=${{ secrets.API_SECRET }}
            API_ENDPOINT=${{ secrets.API_ENDPOINT }}
            API_VERSION=${{ secrets.API_VERSION }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            LOG_LEVEL=${{ secrets.LOG_LEVEL }}

      - name: Verify API Configuration
        run: |
          echo "API Configuration:"
          echo "Endpoint: ${{ secrets.API_ENDPOINT }}"
          echo "Version: ${{ secrets.API_VERSION }}"
          echo "Environment: ${{ secrets.NODE_ENV }}"
          echo "Log Level: ${{ secrets.LOG_LEVEL }}"

      - name: Notify on success
        if: success()
        run: |
          echo "Build and push completed successfully!"
          echo "Image: ${{ secrets.ACR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Build and push failed!"
          exit 1 