# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c4858dda-8f95-4c48-9025-5b9b6af584fc'
  imageRepository: 'jbcuppsethicsdash'
  containerRegistry: 'ethicsdashacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Azure Resource Manager service connection for App Service
  azureServiceConnection: '<YOUR_AZURE_RM_SERVICE_CONNECTION>'
  # Resource group and App Service
  resourceGroupName: 'ethicsdash-rg'
  appName: 'ethicsdash-cicd-app'
  composeFile: 'docker-compose.yml'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: DockerCompose@0
      displayName: 'Build & Push Services'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(dockerRegistryServiceConnection)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: $(composeFile)
        action: 'Build services'
    - task: DockerCompose@0
      displayName: 'Push Services'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(dockerRegistryServiceConnection)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: $(composeFile)
        action: 'Push services'

- stage: Deploy
  displayName: Deploy to App Service
  dependsOn: Build
  jobs:
  - deployment: DeployWebApp
    environment: 'production'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: Deploy multi-container compose
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(appName)
              resourceGroupName: $(resourceGroupName)
              dockerComposeFile: $(composeFile)
