# Azure Container Registry Configuration (Optional for local if images are public/local)
ACR_REGISTRY=yourregistry.azurecr.io
ACR_USERNAME=yourusername
ACR_PASSWORD=yourpassword

# Application Environment
# NODE_ENV=development # Primarily for Node.js apps, but might be used by Python frameworks or build tools
FLASK_ENV=development # For Flask apps (like potentially the ai-backend)
DEBUG=True # General debug flag, often used by Flask/Dash

# MongoDB Configuration
# Use localhost if running scripts directly on host connecting to exposed port
# MONGO_URI=mongodb://localhost:27017/
# Use service name if connecting from another container within docker-compose network
MONGO_URI=mongodb://ai-mongo:27017/
MONGO_DB_NAME=ethical_memes_db

# AI Backend API Configuration (Example - adjust as needed by ai-backend service)
API_KEY=YOUR_LOCAL_API_KEY
API_SECRET=YOUR_LOCAL_API_SECRET
BACKEND_API_URL=http://ai-backend:5000/api # URL for Dash app to call the AI backend API
API_VERSION=v1
LOG_LEVEL=DEBUG # e.g., DEBUG, INFO, WARNING, ERROR 

# OpenAI Configuration for AI Backend
OPENAI_API_KEY=your_openai_api_key_here
ANALYSIS_OPENAI_API_KEY= # Optional: fallback to OPENAI_API_KEY if empty
GEMINI_API_KEY=your_gemini_api_key_here
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Analysis LLM Configuration
ANALYSIS_LLM_MODEL=gpt-4o  # Choose from: gpt-4o, gpt-4-turbo, gpt-3.5-turbo, etc.
ANALYSIS_OPENAI_API_ENDPOINT=https://api.openai.com/v1  # Optional override
# Optional generic endpoints
OPENAI_API_ENDPOINT=https://api.openai.com/v1 

# Default R1 model
DEFAULT_LLM_MODEL=gpt-4o 