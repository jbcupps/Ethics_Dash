#version: '3.8'

services:
  # Main Dash Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-ethical-review-app
    ports:
      - "8050:8050" # Default Dash port mapped to host
    env_file:
      - .env       # Load environment variables from root .env file
    depends_on:
      - ai-mongo
    volumes:
      - .:/app
    command: ["python", "app.py"]

  # AI Ethical Work Backend API Service
  ai-backend:
    build:
      context: .
      dockerfile: backend/backend/Dockerfile
    container_name: ai-ethical-work-backend-api
    # Load both the root .env (testing keys, default model config) and service-specific overrides
    env_file:
      - .env                     # Load environment variables from root .env file
      - backend/backend.env      # Load overrides specific to AI backend service
    ports:
      - "5000:5000" # AI backend API port
    volumes:
      - ./backend/backend:/app/backend
      - ./documents:/app/documents
      - ./scripts:/app/scripts
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - ai-mongo

  # AI Ethical Work Frontend Service (Nginx)
  ai-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-ethical-work-frontend-nginx
    ports:
      - "80:80" # Standard HTTP port for AI frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
    depends_on:
      ai-backend:
        condition: service_healthy

  # AI Ethical Work MongoDB Service
  ai-mongo:
    image: mongo:latest
    container_name: ai-ethical-review-mongodb
    ports:
      - "27018:27017" # Default MongoDB port mapped to host 27018
    volumes:
      - mongo_data:/data/db
    environment: {}
    restart: unless-stopped

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.db-init
    container_name: ai-ethical-db-init
    volumes:
      - ./scripts:/scripts
      - ./documents:/documents
    depends_on:
      ai-mongo:
        condition: service_started
    environment:
      - MONGO_URI=mongodb://ai-ethical-review-mongodb:27017/ethics_db
    command: ["python", "/scripts/populate_memes.py", "/documents/memes.json"]

# Named volume for MongoDB data persistence
volumes:
  mongo_data:

# You can add other services (like a database) here
# volumes:
#   db-data:

# networks:
#   my-network:

# Uncomment and configure these variables in .env file
# ACR_REGISTRY=yourregistry.azurecr.io
# ACR_USERNAME=yourusername
# ACR_PASSWORD=yourpassword 