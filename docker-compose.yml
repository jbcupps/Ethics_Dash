services:
  # Main Dash Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ethics-dash-app
    ports:
      - "8050:8050" # Default Dash port mapped to host
    env_file:
      - .env       # Load environment variables from root .env file
    volumes:
      - .:/app     # Mount current directory for development (reflect code changes)
    restart: unless-stopped
    depends_on:
      - ai-backend # Optional: if the main app needs the AI API
      # Add other dependencies if needed

  # AI Ethical Work Backend API Service
  ai-backend:
    build:
      context: ./ethics_dash/AI_Ethical_Work # Path relative to root
      dockerfile: backend/Dockerfile
    container_name: ai-ethical-review-backend
    env_file:
      - .env # Use root .env file
    ports:
      - "5000:5000" # AI backend API port
    volumes:
      # Mount the root context directory into the container for log persistence
      - ./context:/app/context # Path relative to root
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000/api/models"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - ai-mongo

  # AI Ethical Work Frontend Service (Nginx)
  ai-frontend:
    build:
      context: ./ethics_dash/AI_Ethical_Work # Path relative to root
      dockerfile: frontend/Dockerfile
    container_name: ai-ethical-review-frontend
    ports:
      - "80:80" # Standard HTTP port for AI frontend
    volumes:
      - ./ethics_dash/AI_Ethical_Work/frontend/nginx.conf:/etc/nginx/conf.d/default.conf # Path relative to root
    depends_on:
      - ai-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # AI Ethical Work MongoDB Service
  ai-mongo:
    image: mongo:latest
    container_name: ai-ethical-review-mongodb
    ports:
      - "27018:27017" # Default MongoDB port mapped to host 27018
    volumes:
      - mongo_data:/data/db
    environment: {}
    restart: unless-stopped

# Named volume for MongoDB data persistence
volumes:
  mongo_data: null

# You can add other services (like a database) here
# volumes:
#   db-data:

# networks:
#   my-network:

# Uncomment and configure these variables in .env file
# ACR_REGISTRY=yourregistry.azurecr.io
# ACR_USERNAME=yourusername
# ACR_PASSWORD=yourpassword 