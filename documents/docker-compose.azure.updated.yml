version: '3.4'

services:
  # Start MongoDB first since it's needed by all services
  ai-mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ${WEBAPP_STORAGE_HOME}/data/db:/data/db
    restart: always

  # AI Ethical Work Backend API Service
  ai-backend:
    image: ethicsdashacr.azurecr.io/backend:latest
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://ai-mongo:27017/ethics_db
    restart: always
    depends_on:
      - ai-mongo

  # AI Ethical Work Frontend Service (Nginx)
  ai-frontend:
    image: ethicsdashacr.azurecr.io/frontend:latest
    ports:
      - "80:80"
    restart: always
    depends_on:
      - ai-backend

  # Database initialization service - configured as a non-essential init container
  # Using 'init: true' signals this is an initialization container that can exit
  db-init:
    image: ethicsdashacr.azurecr.io/db-init:latest
    environment:
      - MONGO_URI=mongodb://ai-mongo:27017/ethics_db
    # Keep the container running after the script finishes
    command: >
      sh -c "python /scripts/populate_memes.py /documents/memes.json && echo 'Initialization complete. Keeping container alive...' && tail -f /dev/null"
    restart: "no"
    depends_on:
      - ai-mongo
    deploy:
      restart_policy:
        condition: none
    labels:
      - "com.microsoft.azure.app.type=init"

# No volumes section needed here as we're using Azure File Share 